server:
  port: 8001

spring:
  application:
    name: cloud-payment-server
    zipkin:
      base-url: http://localhost:9411
    sleuth:
      sampler:
        probability: 1 # 采样率值 介于0-1之间， 1 表示一点不放过全部采集
  datasource:
    #开发服务机
    url: jdbc:mysql://localhost:3306/my_proj_db?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true
    username: root
    password: xh208687
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 60000 #指定连接的超时时间，毫秒单位.
      idle-timeout: 600000 #指定连接多久没被使用时，被设置为空闲，默认值：1800000（30分钟）
      max-lifetime: 600000 #指定连接池中连接的最大生存时间，毫秒单位.
      minimum-idle: 30 #池中维护的最小空闲连接数
      maximum-pool-size: 60 #池中最大连接数，包括闲置和使用中的连接
      validation-timeout: 5000 #  连接将被测试活动的最大时间量
      leak-detection-threshold:  1000 #使用Hikari connection pool时，多少毫秒检测一次连接泄露
      login-timeout: 600000 #指定连接数据库的超时时间
      readOnly:  false

eureka:
  client:
    # 表示是否将自己注册进EurekaServer 默认为true
    register-with-eureka: true
    # 是否从EurekaServer 抓去自己的注册信息, 默认为true, 单节点无所谓，
    # 集群必需设置为true 才能配合ribbon 使用负载均衡
    fetch-registry: true
    service-url:
      # 设置与Eureka Server 交互的地址查询服务和注册服务都需要依赖这个地址
      #defaultZone: http://localhost:7002/eureka/ # 单机版
      defaultZone: http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/ # 集群模式
  instance:
    instance-id: payment8001
    prefer-ip-address: true # 访问路径可以显示IP地址
    # Eureka 客户端向服务端发送心跳的时间间隔, 单位为秒(默认是30秒)
    lease-renewal-interval-in-seconds: 10
    # Eureka 服务端在收到最后一次心跳后等待时间上限, 单位为秒(默认90秒), 超时将剔除服务
    lease-expiration-duration-in-seconds: 20

# MyBatis
mybatis:
  # 搜索指定包别名
  typeAliasesPackage: com.**.entities
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath*:mapper/*.xml
  # 加载全局的配置文件
  #configLocation: classpath:mybatis/mybatis-config.xml
# 日志配置
logging:
  level:
    com.proj: debug
    org.springframework: warn